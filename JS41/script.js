'use strict';

let x = 5;
alert(x++); //выводит 5, т.к. срабатывает сразу алерт, потом инкремент

// [] + false - null + true
console.log([] + false - null + true);  //NaN

let y = 1;
let z = y = 2; // 2 присваивается справа налево
alert(z);

console.log([] + 1 + 2);  // конкатенация - 12

alert( "1"[0]); // 1 - нулевой элемент в строке

console.log(2 && 1 && null && 0 && undefined); // для && срабатывает первое попавшееся значение false - null

let a, b;
console.log(!!(a && b) === (b && a)); // false, потому что !! превращают следующее значение в булевое


alert(null || 2 && 3 || 4);     // И запинается на лжи, а ИЛИ на правде. && вернет 3, как последнее правдивое.
           //3  //3  //3        // 1 ИЛИ вернет 3, как первое правдивое
                                // 2 ИЛИ вернет 3, также первое правдивое

const a1 = [1, 2, 3];       // a1 != b1, т.к. это разные хранилища
const b1 = [1, 2, 3];
console.log(a1 == b1);

alert(+"Infinity");     //тип данных число выполняется унарным +

console.log("Ёжик" > "яблоко");     //в таблице смволов юникод нужно посмотреть, кто на каких местах
                                    //посимвольное сравнение

console.log(0 || "" || 2 || undefined || true || false);    // ИЛИ запинается на правде - 2